{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/SRP_Picks_Website/client/src/components/FieldHolder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nfunction Insert(arraySort, addition) {\n  if (arraySort.length === 0) {\n    arraySort.push(addition);\n    return arraySort;\n  } else {\n    const max = arraySort.length;\n    let index = 0;\n\n    while (index < max) {\n      if (arraySort[index].stat >= addition.stat) {\n        index += 1;\n      } else {\n        arraySort.splice(index, 0, addition);\n        return arraySort;\n      }\n    }\n\n    if (addition.stat === 0) {\n      return arraySort;\n    } else {\n      arraySort.push(addition);\n      return arraySort;\n    }\n  }\n}\n\nfunction Average(golfer, results, stat) {\n  const arrayResults = results.filter(result => result.golferId === golfer.id);\n\n  if (stat === \"Driving Accuracy\") {\n    let totfairwayAttempt = 0.0;\n    let totfairwayHit = 0.0;\n    arrayResults.forEach(object => {\n      if (object.fairwayAttempt <= 70) {\n        totfairwayAttempt += object.fairwayAttempt;\n        totfairwayHit += object.fairwayHit;\n      }\n    });\n\n    if (totfairwayAttempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totfairwayHit / totfairwayAttempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  }\n\n  if (stat === \"SG OTT\") {\n    let totsgOTT = 0.0;\n    arrayResults.forEach(object => {\n      totsgOTT += object.sgOTT;\n    });\n\n    if (results.length === 0) {\n      return {\n        name: golfer.name,\n        stat: totsgOTT / results.length\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"SG APP\") {\n    let totsgAPP = 0.0;\n    arrayResults.forEach(object => {\n      totsgAPP += object.sgAPP;\n    });\n    return {\n      name: golfer.name,\n      stat: totsgAPP\n    };\n  } else if (stat === \"SG ARG\") {\n    let totsgArg = 0.0;\n    arrayResults.forEach(object => {\n      totsgArg += object.sgArg;\n    });\n    return {\n      name: golfer.name,\n      stat: totsgArg\n    };\n  } else if (stat === \"SG PUTT\") {\n    let totsgPutt = 0.0;\n    arrayResults.forEach(object => {\n      totsgPutt += object.sgPutt;\n    });\n    return {\n      name: golfer.name,\n      stat: totsgPutt\n    };\n  } else if (stat === \"Driving Accuracy\") {\n    let totfairwayAttempt = 0.0;\n    let totfairwayHit = 0.0;\n    arrayResults.forEach(object => {\n      if (object.fairwayAttempt <= 70) {\n        totfairwayAttempt += object.fairwayAttempt;\n        totfairwayHit += object.fairwayHit;\n      }\n    });\n\n    if (totfairwayAttempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totfairwayHit / totfairwayAttempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Good Drive Percentage\") {\n    let totgdAttempt = 0.0;\n    let totgdHit = 0.0;\n    arrayResults.forEach(object => {\n      if (object.gdAttempt <= 70) {\n        totgdAttempt += object.gdAttempt;\n        totgdHit += object.gdHit;\n      }\n    });\n\n    if (totgdAttempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgdHit / totgdAttempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches +200 GIR\") {\n    let totgir200Hit = 0.0;\n    let totgir200Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir200Attempt += object.gir200Attempt;\n      totgir200Attempt += object.gir200Hit;\n    });\n\n    if (totgir200Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir200Hit / totgir200Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches 175-200 GIR\") {\n    let totgir175Hit = 0.0;\n    let totgir175Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir175Attempt += object.gir175Attempt;\n      totgir175Attempt += object.gir175Hit;\n    });\n\n    if (totgir175Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir175Hit / totgir175Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches 150-175 GIR\") {\n    let totgir150Hit = 0.0;\n    let totgir150Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir150Attempt += object.gir150Attempt;\n      totgir150Attempt += object.gir150Hit;\n    });\n\n    if (totgir150Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir150Hit / totgir150Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches 125-150 GIR\") {\n    let totgir125Hit = 0.0;\n    let totgir125Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir125Attempt += object.gir125Attempt;\n      totgir125Attempt += object.gir125Hit;\n    });\n\n    if (totgir125Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir125Hit / totgir125Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches 100-125 GIR\") {\n    let totgir100Hit = 0.0;\n    let totgir100Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir100Attempt += object.gir100Attempt;\n      totgir100Attempt += object.gir100Hit;\n    });\n\n    if (totgir100Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir100Hit / totgir100Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Approaches -100 GIR\") {\n    let totgir75Hit = 0.0;\n    let totgir75Attempt = 0.0;\n    arrayResults.forEach(object => {\n      totgir75Attempt += object.gir75Attempt;\n      totgir75Attempt += object.gir75Hit;\n    });\n\n    if (totgir75Attempt > 0) {\n      return {\n        name: golfer.name,\n        stat: totgir75Hit / totgir75Attempt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Sand Save Percentage\") {\n    let totsandAtt = 0.0;\n    let totsandSave = 0.0;\n    arrayResults.forEach(object => {\n      if (object.sandAtt <= 25) {\n        totsandAtt += object.sandAtt;\n        totsandSave += object.sandSave;\n      }\n    });\n\n    if (totsandAtt > 0) {\n      return {\n        name: golfer.name,\n        stat: totsandSave / totsandAtt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"Scrambling Capability\") {\n    let totscramblingAtt = 0.0;\n    let totscramblingSave = 0.0;\n    arrayResults.forEach(object => {\n      if (object.scramblingAtt <= 25) {\n        totscramblingAtt += object.scramblingAtt;\n        totscramblingSave += object.scramblingSave;\n      }\n    });\n\n    if (totscramblingAtt > 0) {\n      return {\n        name: golfer.name,\n        stat: totscramblingSave / totscramblingAtt\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  } else if (stat === \"One Putt-Three Putt\") {\n    let totonePutt = 0.0;\n    let totthreePutt = 0.0;\n    arrayResults.forEach(object => {\n      totonePutt += object.onePutt;\n      totthreePutt += object.threePutt;\n    });\n\n    if (totonePutt + totthreePutt > 0) {\n      return {\n        name: golfer.name,\n        stat: totonePutt / (totonePutt + totthreePutt)\n      };\n    }\n\n    return {\n      name: golfer.name,\n      stat: 0\n    };\n  }\n\n  return arrayResults;\n}\n\nconst FieldHolder = ({\n  golfers,\n  stat,\n  period,\n  courseId,\n  results\n}) => {\n  let filteredResults;\n\n  if (period === \"This Course\") {\n    filteredResults = results.filter(result => result.courseId === parseInt(courseId, 10));\n  } else if (period === \"This Season\") {\n    filteredResults = results.filter(result => result.year === 2020);\n  } else {\n    filteredResults = results;\n  }\n\n  let htmlArray = [];\n  let i;\n  let layout = [];\n\n  for (i = 0; i < golfers.length; i++) {\n    const value = Average(golfers[i], filteredResults, stat);\n    layout = Insert(layout, value);\n  }\n\n  layout.forEach((item, index) => {\n    htmlArray.push( /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }\n    }, index + 1)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }\n    }, item.stat))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, htmlArray);\n};\n\nexport default FieldHolder;","map":{"version":3,"sources":["/Users/steper123/Desktop/SRP_Picks_Website/client/src/components/FieldHolder.js"],"names":["React","useState","useEffect","styled","Row","Col","Button","Container","PropTypes","Insert","arraySort","addition","length","push","max","index","stat","splice","Average","golfer","results","arrayResults","filter","result","golferId","id","totfairwayAttempt","totfairwayHit","forEach","object","fairwayAttempt","fairwayHit","name","totsgOTT","sgOTT","totsgAPP","sgAPP","totsgArg","sgArg","totsgPutt","sgPutt","totgdAttempt","totgdHit","gdAttempt","gdHit","totgir200Hit","totgir200Attempt","gir200Attempt","gir200Hit","totgir175Hit","totgir175Attempt","gir175Attempt","gir175Hit","totgir150Hit","totgir150Attempt","gir150Attempt","gir150Hit","totgir125Hit","totgir125Attempt","gir125Attempt","gir125Hit","totgir100Hit","totgir100Attempt","gir100Attempt","gir100Hit","totgir75Hit","totgir75Attempt","gir75Attempt","gir75Hit","totsandAtt","totsandSave","sandAtt","sandSave","totscramblingAtt","totscramblingSave","scramblingAtt","scramblingSave","totonePutt","totthreePutt","onePutt","threePutt","FieldHolder","golfers","period","courseId","filteredResults","parseInt","year","htmlArray","i","layout","value","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nfunction Insert(arraySort, addition) {\n  if (arraySort.length === 0) {\n    arraySort.push(addition);\n    return arraySort;\n  }\n  else {\n    const max = arraySort.length;\n    let index = 0\n    while (index < max) {\n      if (arraySort[index].stat >= addition.stat) {\n        index += 1;\n      }\n      else {\n        arraySort.splice(index, 0, addition);\n        return arraySort;\n      }\n    }\n\n    if (addition.stat === 0) {\n      return arraySort;\n    }\n    else {\n      arraySort.push(addition)\n      return arraySort;\n    }\n  }\n\n\n}\n\nfunction Average(golfer, results, stat) {\n\n    const arrayResults = results.filter((result) => result.golferId === golfer.id);\n\n    if (stat === \"Driving Accuracy\") {\n      let totfairwayAttempt = 0.0;\n      let totfairwayHit = 0.0;\n      arrayResults.forEach((object) => {\n      if (object.fairwayAttempt <= 70) {\n        totfairwayAttempt += object.fairwayAttempt;\n        totfairwayHit += object.fairwayHit;\n      }});\n      if (totfairwayAttempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totfairwayHit/totfairwayAttempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n    }\n    if (stat === \"SG OTT\") {\n      let totsgOTT = 0.0;\n      arrayResults.forEach((object) => {\n        totsgOTT += object.sgOTT;\n      });\n      if (results.length === 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totsgOTT/results.length\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"SG APP\") {\n      let totsgAPP = 0.0;\n      arrayResults.forEach((object) => {\n        totsgAPP += object.sgAPP;\n      });\n      return (\n        {\n          name: golfer.name,\n          stat: totsgAPP\n        }\n      );\n\n    }\n    else if (stat === \"SG ARG\") {\n      let totsgArg = 0.0;\n      arrayResults.forEach((object) => {\n        totsgArg += object.sgArg;\n      });\n      return (\n        {\n          name: golfer.name,\n          stat: totsgArg\n        }\n      );\n    }\n    else if (stat === \"SG PUTT\") {\n      let totsgPutt = 0.0;\n      arrayResults.forEach((object) => {\n        totsgPutt += object.sgPutt;\n      });\n      return (\n        {\n          name: golfer.name,\n          stat: totsgPutt\n        }\n      );\n\n    }\n\n    else if (stat === \"Driving Accuracy\") {\n      let totfairwayAttempt = 0.0;\n      let totfairwayHit = 0.0;\n      arrayResults.forEach((object) => {\n      if (object.fairwayAttempt <= 70) {\n        totfairwayAttempt += object.fairwayAttempt;\n        totfairwayHit += object.fairwayHit;\n      }});\n      if (totfairwayAttempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totfairwayHit/totfairwayAttempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Good Drive Percentage\") {\n      let totgdAttempt = 0.0;\n      let totgdHit = 0.0;\n      arrayResults.forEach((object) => {\n      if (object.gdAttempt <= 70) {\n        totgdAttempt += object.gdAttempt;\n        totgdHit += object.gdHit;\n      }});\n      if (totgdAttempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgdHit/totgdAttempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Approaches +200 GIR\") {\n      let totgir200Hit = 0.0;\n      let totgir200Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir200Attempt += object.gir200Attempt;\n        totgir200Attempt += object.gir200Hit;\n      });\n      if (totgir200Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir200Hit/totgir200Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n    }\n    else if (stat === \"Approaches 175-200 GIR\") {\n      let totgir175Hit = 0.0;\n      let totgir175Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir175Attempt += object.gir175Attempt;\n        totgir175Attempt += object.gir175Hit;\n      });\n      if (totgir175Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir175Hit/totgir175Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Approaches 150-175 GIR\") {\n      let totgir150Hit = 0.0;\n      let totgir150Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir150Attempt += object.gir150Attempt;\n        totgir150Attempt += object.gir150Hit;\n      });\n      if (totgir150Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir150Hit/totgir150Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Approaches 125-150 GIR\") {\n      let totgir125Hit = 0.0;\n      let totgir125Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir125Attempt += object.gir125Attempt;\n        totgir125Attempt += object.gir125Hit;\n      });\n      if (totgir125Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir125Hit/totgir125Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Approaches 100-125 GIR\") {\n      let totgir100Hit = 0.0;\n      let totgir100Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir100Attempt += object.gir100Attempt;\n        totgir100Attempt += object.gir100Hit;\n      });\n      if (totgir100Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir100Hit/totgir100Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Approaches -100 GIR\") {\n      let totgir75Hit = 0.0;\n      let totgir75Attempt = 0.0;\n      arrayResults.forEach((object) => {\n        totgir75Attempt += object.gir75Attempt;\n        totgir75Attempt += object.gir75Hit;\n      });\n      if (totgir75Attempt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totgir75Hit/totgir75Attempt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n\n    }\n    else if (stat === \"Sand Save Percentage\") {\n      let totsandAtt = 0.0;\n      let totsandSave = 0.0;\n      arrayResults.forEach((object) => {\n        if (object.sandAtt <= 25) {\n          totsandAtt += object.sandAtt;\n          totsandSave += object.sandSave;\n        }\n      });\n      if (totsandAtt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totsandSave/totsandAtt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n    }\n    else if (stat === \"Scrambling Capability\") {\n      let totscramblingAtt = 0.0;\n      let totscramblingSave = 0.0;\n      arrayResults.forEach((object) => {\n        if (object.scramblingAtt <= 25) {\n          totscramblingAtt += object.scramblingAtt;\n          totscramblingSave += object.scramblingSave;\n        }\n      });\n      if (totscramblingAtt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totscramblingSave/totscramblingAtt\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n    }\n    else if (stat === \"One Putt-Three Putt\") {\n      let totonePutt = 0.0;\n      let totthreePutt = 0.0;\n      arrayResults.forEach((object) => {\n        totonePutt += object.onePutt;\n        totthreePutt += object.threePutt;\n      });\n\n      if (totonePutt+totthreePutt > 0) {\n        return (\n          {\n            name: golfer.name,\n            stat: totonePutt/(totonePutt+totthreePutt)\n          }\n        );\n      }\n      return (\n        {\n          name: golfer.name,\n          stat: 0\n        }\n      );\n    }\n\n    return arrayResults;\n\n\n\n}\n\nconst FieldHolder = ( { golfers, stat, period, courseId, results } ) => {\n\n  let filteredResults;\n  if (period === \"This Course\") {\n    filteredResults = results.filter((result) => result.courseId === parseInt(courseId, 10));\n  }\n  else if (period === \"This Season\") {\n    filteredResults = results.filter((result) => result.year === 2020);\n  }\n  else {\n    filteredResults = results;\n  }\n\n  let htmlArray = [];\n  let i;\n  let layout = [];\n\n  for (i = 0; i < golfers.length; i++) {\n    const value = Average(golfers[i], filteredResults, stat);\n    layout = Insert(layout, value);\n  }\n\n\n  layout.forEach((item, index) => {\n    htmlArray.push((\n      <Row>\n        <Col>\n          <label>{index + 1}</label>\n        </Col>\n        <Col>\n          <label>{item.name}</label>\n        </Col>\n        <Col>\n          <label>{item.stat}</label>\n        </Col>\n      </Row>\n    ));\n\n  });\n\n\n\n\n  return (\n    <div>\n      {htmlArray}\n    </div>\n  );\n\n\n};\n\nexport default FieldHolder;\n"]},"metadata":{},"sourceType":"module"}